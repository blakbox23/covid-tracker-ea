{"version":3,"sources":["components/Nav.js","redux/countries/countries.js","components/BodyList.js","components/ItemDescription.js","components/Info.js","components/App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Nav","props","className","txt","to","navCheck","Provider","value","GET_COUNTRIES","GET_COUNTRY_DATA","GET_AFRINUM","initialState","countries","countryData","afriNum","reducer","state","action","type","newData","afrinum","BodyList","useSelector","data","dispatch","useDispatch","useEffect","a","fetch","method","json","bfData","filter","country","continent","afriData","cases","toStr","n","toLocaleString","map","src","countryInfo","flag","alt","uuidv4","ItemDescription","countryStats","id","iso3","totalcases","recovered","active","critical","tests","deaths","getCountryData","Info","target","href","App","exact","path","combineReducers","countryReducer","store","createStore","applyMiddleware","logger","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e36884e.chunk.js","sourcesContent":["/*eslint-disable*/\r\nimport React from 'react';\r\nimport { IconContext } from 'react-icons';\r\nimport { RiInformationLine } from 'react-icons/ri';\r\n// import { GiAfrica } from 'react-icons/gi';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Nav(props) {\r\n\r\n  const navCheck = () => {\r\n    if (props.txt !== 'Home'){\r\n      return(\r\n      <Link to=\"/\" className=\"back-btn\">\r\n      {'<'}\r\n      </Link>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className = 'navbar flex'>\r\n      <div>{navCheck()}</div>\r\n      <div className=\"logo-txt\"><Link to=\"/\" >\r\n      {'Covid in Africa'}\r\n      </Link></div>\r\n      <Link to=\"/info\" className=\"logo\">\r\n          <IconContext.Provider value={{ className: 'src-logo' }}>\r\n            <div>\r\n              <RiInformationLine />\r\n            </div>\r\n          </IconContext.Provider>\r\n        </Link>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","export const GET_COUNTRIES = 'countries/countries/GET_COUNTRIES';\nexport const GET_COUNTRY_DATA = 'countries/countries/GET_COUNTRY_DATA';\nexport const GET_AFRINUM = 'countries/countries/GET_AFRINUM';\n\nconst initialState = {\n  countries: [],\n  countryData: [],\n  afriNum: [],\n};\n\nexport const getCountries = () => async (dispatch) => {\n  const data = await fetch(\n    'https://disease.sh/v3/covid-19/countries',\n    { method: 'GET' },\n  );\n  const bfData = await data.json();\n  const newData = bfData.filter((country) => country.continent === 'Africa');\n  dispatch({ type: GET_COUNTRIES, newData });\n};\n\nexport const getAfrinum = () => async (dispatch) => {\n  const data = await fetch(\n    'https://disease.sh/v3/covid-19/continents/africa?strict=true',\n    { method: 'GET' },\n  );\n  const afriData = await data.json();\n  const afrinum = afriData.cases;\n  dispatch({ type: GET_AFRINUM, afrinum });\n};\n\nexport const getCountryData = (country) => async (dispatch) => {\n  const data = await fetch(\n    `https://disease.sh/v3/covid-19/countries/${country}`,\n    { method: 'GET' },\n  );\n  const newData = await data.json();\n  const countryData = {\n    id: newData.countryInfo.iso3,\n    totalcases: newData.cases,\n    recovered: newData.recovered,\n    active: newData.active,\n    critical: newData.critical,\n    tests: newData.tests,\n    deaths: newData.deaths,\n  };\n  dispatch({ type: GET_COUNTRY_DATA, countryData });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_COUNTRIES:\n      return { ...state, countries: action.newData };\n\n    case GET_AFRINUM:\n      return { ...state, afriNum: action.afrinum };\n\n    case GET_COUNTRY_DATA:\n      return { ...state, countryData: action.countryData };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { IconContext } from 'react-icons';\nimport { GiAfrica } from 'react-icons/gi';\nimport Nav from './Nav';\nimport { getCountries, getAfrinum } from '../redux/countries/countries';\n\nfunction BodyList() {\n  const countries = useSelector((state) => state.data.countries);\n  const afriNum = useSelector((state) => state.data.afriNum);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCountries());\n  }, []);\n  useEffect(() => {\n    dispatch(getAfrinum());\n  }, []);\n\n  const toStr = (n) => n.toLocaleString();\n\n  return (\n    <>\n      <Nav txt=\"Home\" />\n      <header className=\"header flex\">\n        <div className=\"header-img\">\n          <IconContext.Provider value={{ className: 'africa-img' }}>\n            <div>\n              <GiAfrica />\n            </div>\n          </IconContext.Provider>\n        </div>\n        <div className=\"header-text\">\n          <div><b>AFRICA</b></div>\n          <div>{toStr(afriNum)}</div>\n        </div>\n      </header>\n      <p className=\"title\">TOTAL COVID CASES IN AFRICA</p>\n      <div className=\"body-list flex\">\n        {countries.map((country) => (\n          <div className=\"body-item\" key={uuidv4()}>\n            <div className=\"flag\">\n              <img src={country.countryInfo.flag} alt=\"logo-img\" className=\"logo-img\" />\n\n            </div>\n            <div className=\"body-item-txt\">\n              <Link to={`/${country.country}`}>\n                {country.country}\n              </Link>\n              <div className=\"home-cases\">{toStr(country.cases)}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default BodyList;\n","/*eslint-disable*/\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCountryData } from '../redux/countries/countries';\r\nimport Nav from './Nav';\r\n\r\nfunction ItemDescription(props) {\r\n  const country = props.country\r\n  const dispatch = useDispatch();\r\n  const countryStats = useSelector((state) => state.data.countryData);\r\n\r\n  useEffect(() => {\r\n        dispatch(getCountryData(country));\r\n      }, []);\r\n\r\n  const toStr = n => n.toLocaleString();\r\n\r\n  return (\r\n    <div>\r\n      <Nav txt={'Details'}/>\r\n    <header className=\"header flex\">\r\n        <div className=\"header-img\">\r\n        </div>\r\n        <div className=\"header-text\">\r\n          <div><b>{country}</b></div>\r\n\r\n          {toStr(countryStats.totalcases)}         \r\n        </div>\r\n      </header>\r\n\r\n      <p className=\"title\">COVID NUMBERS IN {country} </p>\r\n\r\n      <div className=\"stats-list\">\r\n      <div className=\"flex stats-list-item\" ><span>Total Cases:</span> <span>{toStr(countryStats.totalcases)}</span></div>\r\n      <div className=\"flex stats-list-item\" ><span>Recovered:</span> <span>{toStr(countryStats.recovered)}</span></div>\r\n      <div className=\"flex stats-list-item\" ><span>Active:</span> <span>{toStr(countryStats.active)}</span></div>\r\n      <div className=\"flex stats-list-item\" ><span>Critical:</span> <span>{toStr(countryStats.critical)}</span></div>\r\n      <div className=\"flex stats-list-item\" ><span>Tests:</span> <span>{toStr(countryStats.tests)}</span></div>\r\n      <div className=\"flex stats-list-item\" ><span>Deaths:</span> <span>{toStr(countryStats.deaths)}</span></div>\r\n      </div>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemDescription;\r\n","import React from 'react';\nimport { VscGithub } from 'react-icons/vsc';\nimport { AiOutlineLinkedin } from 'react-icons/ai';\nimport Nav from './Nav';\n\nfunction Info() {\n  return (\n    <div className=\"info-comp\">\n      <Nav />\n      <header className=\"header flex\">\n        <div className=\"header-img\" />\n        <div className=\"header-text\">\n          <div><b>Info</b></div>\n          More about the app\n        </div>\n      </header>\n      <p className=\"title\">\n        GENERAL\n      </p>\n      <div className=\"stats-list\">\n        <div className=\"flex stats-list-item\">\n          This is published data on the spread of the Covid 19 in Africa.\n        </div>\n        <div className=\"flex stats-list-item\">\n          The API used by this App is updated everyday.\n        </div>\n      </div>\n      <p className=\"title\">\n        SOURCES\n      </p>\n      <div className=\"stats-list\">\n        <div className=\"flex stats-list-item\">\n          <span><a target=\"blank\" href=\"https://www.worldometers.info/coronavirus/\">Worldometers</a></span>\n        </div>\n        <div className=\"flex stats-list-item\">\n          <span><a target=\"blank\" href=\"https://github.com/disease-sh/API\">Disease-sh API</a></span>\n        </div>\n      </div>\n      <p className=\"title\">\n        DEVELOPER\n      </p>\n      <div className=\"stats-list\">\n        <div className=\"flex stats-list-item\">\n          <span>\n            {' '}\n            <VscGithub />\n            {' '}\n            <span><a target=\"blank\" href=\"https://github.com/blakbox23/\">blakbox23</a></span>\n          </span>\n        </div>\n        <div className=\"flex stats-list-item\">\n          <span>\n            {' '}\n            <AiOutlineLinkedin />\n            {' '}\n            <span><a target=\"blank\" href=\"https://www.linkedin.com/in/peter-mbuthia/\">blakbox23</a></span>\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Info;\n","import { Route, Switch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport BodyList from './BodyList';\nimport ItemDescription from './ItemDescription';\nimport '../App.css';\nimport Info from './Info';\n\n// import Kenya from '../countries/Kenya';\n// import Tanzania from '../countries/Tanzania';\n\nfunction App() {\n  const countries = useSelector((state) => state.data.countries);\n\n  return (\n    <>\n      <Switch>\n\n        {countries.map((country) => (\n          <Route exact path={`/${country.country}`} key={country}>\n            <ItemDescription country={country.country} />\n          </Route>\n        ))}\n        <Route exact path=\"/info\">\n          <Info />\n        </Route>\n        <Route exact path=\"/\">\n          <BodyList />\n        </Route>\n\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport countryReducer from './countries/countries';\n\nconst reducer = combineReducers({\n  data: countryReducer,\n  // additional reducers could be added here\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger, thunk),\n);\n\nexport default store;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/configureStore';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}